name: Deploy Node.js project to Azure Function App

on:
  push:
    branches:
      - main

env:
  AZURE_RESOURCE_GROUP_NAME: "w2l-prd-uks-rg" # resource group name on Azure
  AZURE_FUNCTIONAPP_NAME: "w2l-prd-uks-fa" # function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "." # path to function app project, defaults to the repository root
  NODE_VERSION: "18.19.0" # node version to use (e.g. '8.x', '10.x', '12.x')

jobs:
  build-and-deploy-stg:
    name: Build and Deploy to Staging Environment
    runs-on: ubuntu-latest
    environment: staging
    env:
      AdaptiveCardTemplateExpansionFunctionName: "AdaptiveCardTemplateExpansionService"
      ContactUsFormParserFunctionName: "ContactUsFormParserService"
      WebToLeadFormParserFunctionName: "ContactUsFormParserService"
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Resolve Project Dependencies"
        shell: bash
        run: |
          echo "Resolving project dependencies..."
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          npm install
          popd

      - name: "Deploy Azure Function"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          slot-name: "staging"

      - name: "Get Function Invocation URL"
        id: get_invocation_url
        shell: bash
        run: |
          echo "Retrieving function invocation URL..."
          INVOKE_URL_BASE=$(az functionapp function show -g $AZURE_RESOURCE_GROUP_NAME -n $AZURE_FUNCTIONAPP_NAME --function-name $AdaptiveCardTemplateExpansionFunctionName --query "invokeUrlTemplate" --output tsv)
          INVOKE_URL_CODE=$(az functionapp function keys list -g $AZURE_RESOURCE_GROUP_NAME -n $AZURE_FUNCTIONAPP_NAME --function-name $AdaptiveCardTemplateExpansionFunctionName --query "default" --output tsv)
          echo "ADAPTIVE_CARD_FUNCTION_INVOKE_URL=${INVOKE_URL_BASE}?code=${INVOKE_URL_CODE}" >> $GITHUB_OUTPUT
          INVOKE_URL_BASE=$(az functionapp function show -g $AZURE_RESOURCE_GROUP_NAME -n $AZURE_FUNCTIONAPP_NAME --function-name $ContactUsFormParserFunctionName --query "invokeUrlTemplate" --output tsv)
          INVOKE_URL_CODE=$(az functionapp function keys list -g $AZURE_RESOURCE_GROUP_NAME -n $AZURE_FUNCTIONAPP_NAME --function-name $ContactUsFormParserFunctionName --query "default" --output tsv)
          echo "CONTACT_US_FUNCTION_INVOKE_URL=${INVOKE_URL_BASE}?code=${INVOKE_URL_CODE}" >> $GITHUB_OUTPUT
          INVOKE_URL_BASE=$(az functionapp function show -g $AZURE_RESOURCE_GROUP_NAME -n $AZURE_FUNCTIONAPP_NAME --function-name $WebToLeadFormParserFunctionName --query "invokeUrlTemplate" --output tsv)
          INVOKE_URL_CODE=$(az functionapp function keys list -g $AZURE_RESOURCE_GROUP_NAME -n $AZURE_FUNCTIONAPP_NAME --function-name $WebToLeadFormParserFunctionName --query "default" --output tsv)
          echo "WEB_TO_LEAD_FUNCTION_INVOKE_URL=${INVOKE_URL_BASE}?code=${INVOKE_URL_CODE}" >> $GITHUB_OUTPUT

      - name: "Run Tests"
        shell: bash
        env:
          ADAPTIVE_CARD_FUNCTION_INVOKE_URL: ${{ steps.get_invocation_url.outputs.ADAPTIVE_CARD_FUNCTION_INVOKE_URL }}
          CONTACT_US_FUNCTION_INVOKE_URL: ${{ steps.get_invocation_url.outputs.CONTACT_US_FUNCTION_INVOKE_URL }}
          WEB_TO_LEAD_FUNCTION_INVOKE_URL: ${{ steps.get_invocation_url.outputs.WEB_TO_LEAD_FUNCTION_INVOKE_URL }}
        run: |
          echo "Pausing for 60 seconds to ensure function is ready..."
          sleep 60
          echo "Running tests..."
          echo "Adaptive Card Template Expansion Function Invocation URL: ${ADAPTIVE_CARD_FUNCTION_INVOKE_URL}"
          echo "Contact Us Form Parser Function Invocation URL: ${CONTACT_US_FUNCTION_INVOKE_URL}"
          echo "Web To Lead Form Parser Function Invocation URL: ${WEB_TO_LEAD_FUNCTION_INVOKE_URL}"
          npm test

  deploy-prd:
    name: Deploy to Production Environment
    needs: build-and-deploy-stg
    runs-on: ubuntu-latest
    environment: production
    env:
      SourceSlot: "staging"
      TargetSlot: "production"
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Swap Staging and Production Slots"
        shell: bash
        run: |
          echo "Swapping staging and production slots..."
          az functionapp deployment slot swap --resource-group $AZURE_RESOURCE_GROUP_NAME --name $AZURE_FUNCTIONAPP_NAME --slot $SourceSlot --target-slot $TargetSlot
          echo "Slot swap complete."
