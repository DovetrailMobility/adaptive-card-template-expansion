name: Deploy Node.js project to Azure Function App

# Do not trigger deployment workflow on changes to adaptive_card_templates directory
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "adaptive_card_templates/**"

env:
  AZURE_RESOURCE_GROUP_NAME: "w2l-prd-uks-rg" # resource group name on Azure
  AZURE_FUNCTIONAPP_NAME: "w2l-prd-uks-fa" # function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "." # path to function app project, defaults to the repository root
  NODE_VERSION: "18.19.0" # node version to use (e.g. '8.x', '10.x', '12.x')

jobs:
  build-and-deploy-stg:
    name: Build and Deploy to Staging Environment
    runs-on: ubuntu-latest
    environment: staging
    env:
      AdaptiveCardTemplateExpansionFunctionName: "AdaptiveCardTemplateExpansionService"
      ContactUsFormParserFunctionName: "ContactUsFormParserService"
      WebToLeadFormParserFunctionName: "WebToLeadFormParserService"
      OrderFormParserFunctionName: "OrderFormParserService"
      TestDriveFormParserFunctionName: "TestDriveFormParserService"
      GetOrderTypeServiceFunctionName: "GetOrderTypeService"
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Resolve Project Dependencies"
        shell: bash
        run: |
          echo "Resolving project dependencies..."
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          npm install
          popd

      - name: "Deploy Azure Function"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          slot-name: "staging"

      - name: "Get Function Invocation URLs"
        id: get_invocation_url
        shell: bash
        run: |
          echo "Getting access token..."
          ACCESS_TOKEN=$(az account get-access-token --query "accessToken" -o tsv)
          RESOURCE="https://management.azure.com/"
          SUBSCRIPTION_ID=$(az account show --query "id" -o tsv)
          SLOT_NAME="staging"
          echo "Retrieving function invocation URL..."
          REST_API_URL=("https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${AdaptiveCardTemplateExpansionFunctionName}?api-version=2023-12-01")
          INVOKE_URL_BASE=$(curl -X GET -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" ${REST_API_URL} --no-progress-meter | jq -r '.properties.invoke_url_template')
          REST_API_URL=$(echo "https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${AdaptiveCardTemplateExpansionFunctionName}/listKeys?api-version=2023-12-01")
          INVOKE_URL_KEY=$(curl -X POST -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" -H "content-length: 0" ${REST_API_URL} --no-progress-meter | jq -r '.default')
          echo "ADAPTIVE_CARD_FUNCTION_INVOKE_URL=${INVOKE_URL_BASE}?code=${INVOKE_URL_KEY}" >> $GITHUB_OUTPUT
          REST_API_URL=("https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${ContactUsFormParserFunctionName}?api-version=2023-12-01")
          INVOKE_URL_BASE=$(curl -X GET -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" ${REST_API_URL} --no-progress-meter | jq -r '.properties.invoke_url_template')
          REST_API_URL=$(echo "https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${ContactUsFormParserFunctionName}/listKeys?api-version=2023-12-01")
          INVOKE_URL_KEY=$(curl -X POST -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" -H "content-length: 0" ${REST_API_URL} --no-progress-meter | jq -r '.default')
          echo "CONTACT_US_FUNCTION_INVOKE_URL=${INVOKE_URL_BASE}?code=${INVOKE_URL_KEY}" >> $GITHUB_OUTPUT
          REST_API_URL=("https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${WebToLeadFormParserFunctionName}?api-version=2023-12-01")
          INVOKE_URL_BASE=$(curl -X GET -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" ${REST_API_URL} --no-progress-meter | jq -r '.properties.invoke_url_template')
          REST_API_URL=$(echo "https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${WebToLeadFormParserFunctionName}/listKeys?api-version=2023-12-01")
          INVOKE_URL_KEY=$(curl -X POST -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" -H "content-length: 0" ${REST_API_URL} --no-progress-meter | jq -r '.default')
          echo "WEB_TO_LEAD_FUNCTION_INVOKE_URL=${INVOKE_URL_BASE}?code=${INVOKE_URL_KEY}" >> $GITHUB_OUTPUT
          REST_API_URL=("https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${OrderFormParserFunctionName}?api-version=2023-12-01")
          INVOKE_URL_BASE=$(curl -X GET -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" ${REST_API_URL} --no-progress-meter | jq -r '.properties.invoke_url_template')
          REST_API_URL=$(echo "https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${OrderFormParserFunctionName}/listKeys?api-version=2023-12-01")
          INVOKE_URL_KEY=$(curl -X POST -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" -H "content-length: 0" ${REST_API_URL} --no-progress-meter | jq -r '.default')
          echo "ORDER_FUNCTION_INVOKE_URL=${INVOKE_URL_BASE}?code=${INVOKE_URL_KEY}" >> $GITHUB_OUTPUT
          REST_API_URL=("https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${TestDriveFormParserFunctionName}?api-version=2023-12-01")
          INVOKE_URL_BASE=$(curl -X GET -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" ${REST_API_URL} --no-progress-meter | jq -r '.properties.invoke_url_template')
          REST_API_URL=$(echo "https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${TestDriveFormParserFunctionName}/listKeys?api-version=2023-12-01")
          INVOKE_URL_KEY=$(curl -X POST -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" -H "content-length: 0" ${REST_API_URL} --no-progress-meter | jq -r '.default')
          echo "TEST_DRIVE_FUNCTION_INVOKE_URL=${INVOKE_URL_BASE}?code=${INVOKE_URL_KEY}" >> $GITHUB_OUTPUT
          REST_API_URL=("https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${GetOrderTypeServiceFunctionName}?api-version=2023-12-01")
          INVOKE_URL_BASE=$(curl -X GET -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" ${REST_API_URL} --no-progress-meter | jq -r '.properties.invoke_url_template')
          REST_API_URL=$(echo "https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Web/sites/${AZURE_FUNCTIONAPP_NAME}/slots/${SLOT_NAME}/functions/${GetOrderTypeServiceFunctionName}/listKeys?api-version=2023-12-01")
          INVOKE_URL_KEY=$(curl -X POST -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" -H "content-length: 0" ${REST_API_URL} --no-progress-meter | jq -r '.default')
          echo "ORDER_TYPE_FUNCTION_INVOKE_URL=${INVOKE_URL_BASE}?code=${INVOKE_URL_KEY}" >> $GITHUB_OUTPUT

      - name: "Run Tests"
        shell: bash
        env:
          ADAPTIVE_CARD_FUNCTION_INVOKE_URL: ${{ steps.get_invocation_url.outputs.ADAPTIVE_CARD_FUNCTION_INVOKE_URL }}
          CONTACT_US_FUNCTION_INVOKE_URL: ${{ steps.get_invocation_url.outputs.CONTACT_US_FUNCTION_INVOKE_URL }}
          WEB_TO_LEAD_FUNCTION_INVOKE_URL: ${{ steps.get_invocation_url.outputs.WEB_TO_LEAD_FUNCTION_INVOKE_URL }}
          ORDER_FUNCTION_INVOKE_URL: ${{ steps.get_invocation_url.outputs.ORDER_FUNCTION_INVOKE_URL }}
          TEST_DRIVE_FUNCTION_INVOKE_URL: ${{ steps.get_invocation_url.outputs.TEST_DRIVE_FUNCTION_INVOKE_URL }}
          ORDER_TYPE_FUNCTION_INVOKE_URL: ${{ steps.get_invocation_url.outputs.ORDER_TYPE_FUNCTION_INVOKE_URL }}
        run: |
          echo "Pausing for 60 seconds to ensure function is ready..."
          sleep 60
          echo "Running tests..."
          echo "Adaptive Card Template Expansion Function Invocation URL: ${ADAPTIVE_CARD_FUNCTION_INVOKE_URL}"
          echo "Contact Us Function Invocation URL: ${CONTACT_US_FUNCTION_INVOKE_URL}"
          echo "Web To Lead Function Invocation URL: ${WEB_TO_LEAD_FUNCTION_INVOKE_URL}"
          echo "Order Function Invocation URL: ${ORDER_FUNCTION_INVOKE_URL}"
          echo "Test Drive Function Invocation URL: ${TEST_DRIVE_FUNCTION_INVOKE_URL}"
          npm test

  deploy-prd:
    name: Deploy to Production Environment
    needs: build-and-deploy-stg
    runs-on: ubuntu-latest
    environment: production
    env:
      AZURE_FUNCTIONAPP_SOURCE_SLOT: "staging"
      AZURE_FUNCTIONAPP_TARGET_SLOT: "production"
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Swap Staging and Production Slots"
        shell: bash
        run: |
          echo "Getting access token..."
          ACCESS_TOKEN=$(az account get-access-token --query "accessToken" -o tsv)
          RESOURCE="https://management.azure.com/"
          SUBSCRIPTION_ID=$(az account show --query "id" -o tsv)
          echo "Swapping staging and production slots..."
          REST_API_URL=("https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${{ env.AZURE_RESOURCE_GROUP_NAME }}/providers/Microsoft.Web/sites/${{ env.AZURE_FUNCTIONAPP_NAME }}/slots/${{ env.AZURE_FUNCTIONAPP_SOURCE_SLOT }}/slotsswap?api-version=2023-12-01")
          curl -X POST -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "Content-Type: application/json" --data '{"preserveVnet": "true", "targetSlot": "${{ env.AZURE_FUNCTIONAPP_TARGET_SLOT }}"}' ${REST_API_URL} --no-progress-meter
          echo "Slot swap complete."

  align-stg:
    name: Align Staging Environment
    needs: deploy-prd
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Resolve Project Dependencies"
        shell: bash
        run: |
          echo "Resolving project dependencies..."
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          npm install
          popd

      - name: "Deploy Azure Function"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          slot-name: "staging"
